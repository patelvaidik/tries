#include <iostream>

///////////////////////////////////////
class Trie
	{
	private:
		struct Node;
		Node* head;
		
	public:
		Trie();
		~Trie();
		void Insert(const std::string&);
		bool Search(const std::string&);
		bool StartsWith(const std::string&);
	};
///////////////////////////////////////

///////////////////////////////////////
Trie::Trie()
	{
	std::cout << "Constructor called for trie.\n";
	}
///////////////////////////////////////


///////////////////////////////////////
Trie::~Trie()
	{
	std::cout << "Destructor called for trie.\n";
	}
///////////////////////////////////////

///////////////////////////////////////
void Trie::Insert(const std::string&)
	{
	
	}
///////////////////////////////////////


///////////////////////////////////////
bool Trie::Search(const std::string&)
	{
	return false;
	}
///////////////////////////////////////


///////////////////////////////////////
bool Trie::StartsWith(const std::string&)
	{
	return false;
	}
///////////////////////////////////////